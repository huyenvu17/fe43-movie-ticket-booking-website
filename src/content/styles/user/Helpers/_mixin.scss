@mixin styleText($color, $fontSize, $fontWeight, $text-transform) {
  color: $color;
  font-size: $fontSize;
  font-weight: $fontWeight;
  text-transform: $text-transform;
}
@mixin textStyle($fs, $fw, $color) {
  font-size: $fs;
  font-weight: $fw;
  color: $color;
}
@mixin Text($fs, $fw) {
  font-size: $fs;
  font-weight: $fw;
}
//Tham khảo CSS Unicode Star Rating Mixin.markdown
@mixin rating-star( $filled-color: #F9BF3B, $empty-color: #444, $size: 80px, $width: 400px) {
  $star--filled: ★;
  $star--empty: ☆;
  width: $width;
  > * {
   float: right;
  }
  // optional initial pulse of stars
  @at-root {
   @keyframes pulse {
    50% {
     color: lighten($empty-color, 10%);
     text-shadow: 0 0 15px lighten($empty-color, 20%);
    }
   }
  }
  label {
   height: 40px;
   width: 20%;
   display: block;
   position: relative;
   cursor: pointer;
   @for $i from 5 through 1 {
    &:nth-of-type(#{$i}):after {
     $animation-delay: $i * .05s;
     animation-delay: $animation-delay;
    }
   }
   &:after {
    transition: all 0.4s ease-out;
    -webkit-font-smoothing: antialiased;
    position: absolute;
    content: '#{$star--empty}';
    color: $empty-color;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    text-align: center;
    font-size: $size;
    animation: 1s pulse ease;
   }
   &:hover:after {
    color: lighten($empty-color, 10%);
    text-shadow: 0 0 15px lighten($empty-color, 10%);
   }
  }
  input {
   display: none;
   &:checked {
    + label:after,
    ~ label:after {
     content: '#{$star--filled}';
     color: $filled-color;
     text-shadow: 0 0 20px $filled-color;
    }
   }
  }
 }

@mixin styleButton($bg-color, $border-color, $pd-y, $pd-x, $border-radius, $text-transform) {
  background-color: $bg-color;
  border: 1px solid $border-color;
  padding: $pd-y $pd-x;
  border-radius: $border-radius;
  text-transform: $text-transform;
}
@mixin hoverButton($bg-hover, $bd-hover, $cl-hover) {
  background-color: $bg-hover;
  border-color: $bd-hover;
  color: $cl-hover;
}
@mixin styleForm($bg-color, $bd-color-focus) {
  .input-group {
    background-color: $bg-color;
    border: 1px solid $bg-color;
    .form-control {
      background-color: transparent;
      border-color: transparent;
      box-shadow: none;
      &:focus {
        background-color: $color-white-0;
        border-color: $bd-color-focus;
        border-right-color: transparent;
        // & + .input-group-append {
        //   background-color: $color-white-0;
        //   border-color: $color-gray-6;
        //   border-left-color: transparent;
        // }
      }
      &:focus + .input-group-append {
        .input-group-text {
          background-color: $color-white-0;
          border-color: $bd-color-focus;
          border-left-color: transparent;
          &:hover {
            background-color: $color-red-0;
            color: $color-white-0;
          }
        }
      }
    }
    .input-group-text {
      background-color: transparent;
      border-color: transparent;
      color: $color-red-0;
      &:hover {
        background-color: $color-red-0;
        color: $color-white-0;
      }
    }
  }
}
// collection
@mixin collectionItem {
  position: relative;
  text-align: left;
  box-shadow: 0 0 1px 1px rgba(20,23,28,.1), 0 3px 1px 0 rgba(20,23,28,.1);
  opacity: 1;
}
//small
@mixin responsive($screen) {
  @if map-has-key($map: $breakpoints, $key: $screen) {
    //576px
    $value: map-get($map: $breakpoints, $key: $screen);
    @media screen and (max-width: $value){
      @content;
    }
  }
  @else {
    @warn "please re-enter";
  }
}
